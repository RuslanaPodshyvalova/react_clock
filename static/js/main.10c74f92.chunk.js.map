{"version":3,"sources":["components/Clock/Clock.jsx","App.js","index.js"],"names":["Clock","state","date","intervalId","undefined","isClockVisible","clockName","setRandomName","num","Math","floor","random","setState","runTimer","id","setInterval","Date","toLocaleTimeString","clearTimer","clearInterval","showTimer","hideTimer","this","prevProps","prevState","oldClockName","console","log","className","type","onClick","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"oOAGaA,G,MAAb,4MACEC,MAAQ,CACNC,KAAM,GACNC,gBAAYC,EACZC,gBAAgB,EAChBC,UAAW,GALf,EAuBEC,cAAgB,WACd,IAEMC,EAAMC,KAAKC,MAAM,IAAAD,KAAKE,UAFhB,EAIZ,EAAKC,SAAS,CAAEN,UAAWE,KA5B/B,EA+BEK,SAAW,WACT,IAAMC,EAAKC,aAAY,WACrB,EAAKH,SAAS,CAAEV,MAAM,IAAIc,MAAOC,yBAChC,KAEH,EAAKL,SAAS,CAAET,WAAYW,KApChC,EAuCEI,WAAa,WACX,IAAQf,EAAe,EAAKF,MAApBE,WAERgB,cAAchB,IA1ClB,EA6CEiB,UAAY,WACV,EAAKR,SAAS,CAAEP,gBAAgB,IAChC,EAAKQ,YA/CT,EAkDEQ,UAAY,WACV,EAAKT,SAAS,CAAEP,gBAAgB,IAChC,EAAKa,cApDT,uDAQE,WACEI,KAAKT,aATT,gCAYE,SAAmBU,EAAWC,GAC5B,IAAQlB,EAAcgB,KAAKrB,MAAnBK,UACFmB,EAAeD,EAAUlB,UAE3BmB,IAAiBnB,GAEnBoB,QAAQC,IAAI,wCACCF,EADD,eACoBnB,EADpB,QAlBlB,oBAuDE,WACE,MAAiCgB,KAAKrB,MAA9BC,EAAR,EAAQA,KAAMG,EAAd,EAAcA,eAId,OAFAqB,QAAQC,IAAIzB,EAAI,kBAAcA,GAAS,0BAGrC,oCACE,yBAAK0B,UAAU,WACb,4BAAQC,KAAK,SAASC,QAASR,KAAKF,WAApC,cAGA,4BAAQS,KAAK,SAASC,QAASR,KAAKD,WAApC,cAGA,4BAAQQ,KAAK,SAASC,QAASR,KAAKf,eAApC,oBAIF,uBAAGqB,UAAWvB,EAAiB,aAAe,aAA9C,wBACoBH,SA1E5B,GAA2B6B,IAAMC,YCQlBC,EAPH,kBACV,yBAAKL,UAAU,OACb,2CACA,kBAAC,EAAD,QCHJM,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.10c74f92.chunk.js","sourcesContent":["import React from 'react';\nimport './Clock.scss';\n\nexport class Clock extends React.Component {\n  state = {\n    date: '',\n    intervalId: undefined,\n    isClockVisible: true,\n    clockName: 0,\n  }\n\n  componentDidMount() {\n    this.runTimer();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { clockName } = this.state;\n    const oldClockName = prevState.clockName;\n\n    if (oldClockName !== clockName) {\n      // eslint-disable-next-line\n      console.log(`The Clock was renamed`\n        + ` from ${oldClockName} to ${clockName}.`);\n    }\n  }\n\n  setRandomName = () => {\n    const min = 1;\n    const max = 1000;\n    const num = Math.floor(Math.random() * (max - min + 1)) + min;\n\n    this.setState({ clockName: num });\n  }\n\n  runTimer = () => {\n    const id = setInterval(() => {\n      this.setState({ date: new Date().toLocaleTimeString() });\n    }, 1000);\n\n    this.setState({ intervalId: id });\n  }\n\n  clearTimer = () => {\n    const { intervalId } = this.state;\n\n    clearInterval(intervalId);\n  }\n\n  showTimer = () => {\n    this.setState({ isClockVisible: true });\n    this.runTimer();\n  }\n\n  hideTimer = () => {\n    this.setState({ isClockVisible: false });\n    this.clearTimer();\n  }\n\n  render() {\n    const { date, isClockVisible } = this.state;\n    // eslint-disable-next-line\n    console.log(date ? `time is ${date}` : 'timer isn\\'t set up yet');\n\n    return (\n      <>\n        <div className=\"control\">\n          <button type=\"button\" onClick={this.showTimer}>\n            Show Clock\n          </button>\n          <button type=\"button\" onClick={this.hideTimer}>\n            Hide Clock\n          </button>\n          <button type=\"button\" onClick={this.setRandomName}>\n            Set random name\n          </button>\n        </div>\n        <p className={isClockVisible ? ' time show' : 'time hide'}>\n          {`Current time: ${date}`}\n        </p>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\nconst App = () => (\n  <div className=\"App\">\n    <h1>React clock</h1>\n    <Clock />\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}